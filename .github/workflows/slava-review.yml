name: "Slava's DEMOLITION Code Review"

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  nuclear_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get commit data
        id: commit_data
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const { data: commit } = await github.rest.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha
              });

              const result = JSON.stringify({
                files: commit.files || [],
                author: commit.author?.login || context.actor
              });

              core.setOutput('result', result);
            } catch (error) {
              core.setFailed(`Commit access error: ${error.message}`);
              core.setOutput('result', JSON.stringify({files: [], author: context.actor}));
            }

      - name: Analyze changes
        id: pr_analysis
        run: |
          # Устанавливаем jq для обработки JSON
          sudo apt-get install -y jq

          FILES_JSON='${{ steps.commit_data.outputs.result }}'
          TOTAL_CHANGES=$(echo "$FILES_JSON" | jq '[.files[].changes] | add // 0')
          AUTHOR=$(echo "$FILES_JSON" | jq -r '.author')
          IS_HUGE=$(($TOTAL_CHANGES > 300))

          echo "total_changes=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
          echo "is_huge_change=$IS_HUGE" >> $GITHUB_OUTPUT
          echo "author=$AUTHOR" >> $GITHUB_OUTPUT

      - name: Generate comment
        id: generate_comment
        run: |
          if [ ${{ steps.pr_analysis.outputs.total_changes }} -lt 50 ] && [ $(( RANDOM % 10 )) -eq 0 ]; then
            echo "comment=🫤 Ну... ладно. Но я всё равно недоволен." >> $GITHUB_OUTPUT
          else
            RANDOM_REVIEW=$(
              echo -e "💀 Код-убийца\n🤮 Меня тошнит\n🔥 Сожги это\n👎 Это хуже, чем PHP в 2007\n💩 Код-дерьмо" | shuf -n 1
            )
            echo "comment=$RANDOM_REVIEW" >> $GITHUB_OUTPUT
          fi

      - name: Post comment
        uses: actions/github-script@v6
        env:
          COMMENT: ${{ steps.generate_comment.outputs.comment }}
          AUTHOR: ${{ steps.pr_analysis.outputs.author }}
        with:
          script: |
            try {
              await github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
                body: `@${process.env.AUTHOR} ${process.env.COMMENT}`
              });
            } catch (error) {
              core.notice("Fallback to issue comment");
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `@${process.env.AUTHOR} ${process.env.COMMENT}`
              });
            }
