name: "Slava's Code Review"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  nuclear_review:
    runs-on: ubuntu-latest
    steps:
      - name: Analyze PR (for extra hate)
        id: pr_analysis
        uses: actions/github-script@v6
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const totalChanges = files.reduce((sum, file) => sum + file.changes, 0);
            const isHugePR = totalChanges > 300;
            const isMassiveFile = files.some(file => file.changes > 150);

            // –†–∞–Ω–¥–æ–º–Ω–∞—è "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞" –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –Ω–µ–Ω–∞–≤–∏—Å—Ç–∏
            const errors = [
              "–Ω–∞–π–¥–µ–Ω—ã —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏ (–≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ)",
              "–Ω–∞—Ä—É—à–µ–Ω—ã –ø—Ä–∏–Ω—Ü–∏–ø—ã SOLID (–∫–∞–∫ –±—É–¥—Ç–æ –°–ª–∞–≤–∞ –∏—Ö —Å–æ–±–ª—é–¥–∞–µ—Ç)",
              "–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (–°–ª–∞–≤–∞ –µ—ë –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ —á–∏—Ç–∞–µ—Ç)",
              "–∫–æ–¥ –Ω–µ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ '—Ö–æ—Ä–æ—à–∏–π —Ç–æ–Ω' (–ø–æ –º–Ω–µ–Ω–∏—é –°–ª–∞–≤—ã)",
            ];
            const randomError = errors[Math.floor(Math.random() * errors.length)];

            // –ï—Å–ª–∏ PR –æ–≥—Ä–æ–º–Ω—ã–π ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –æ—Å–æ–±—ã–π –≥–Ω–µ–≤
            let extraHate = "";
            if (isHugePR) {
              extraHate = "–¢—ã —á–æ, **—Ü–µ–ª—ã–π —Ä–æ–º–∞–Ω** –Ω–∞–ø–∏—Å–∞–ª?! –≠—Ç–æ –∂–µ –Ω–µ –∫–æ–¥, –∞ **–ø–æ–º–æ–π–∫–∞**! –†–∞–∑–±–µ–π –Ω–∞ 20 PR!";
            } else if (isMassiveFile) {
              extraHate = "–û–¥–∏–Ω —Ñ–∞–π–ª ‚Äî **300+ —Å—Ç—Ä–æ–∫**? –¢—ã **–∏–∑–≤–µ—Ä–≥**?!";
            }

            // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
            core.setOutput('is_huge_pr', isHugePR);
            core.setOutput('is_massive_file', isMassiveFile);
            core.setOutput('random_error', randomError);
            core.setOutput('extra_hate', extraHate);

      - name: Generate Maximum Toxicity
        id: slava_review
        run: |
          RANDOM_NUMBER=$(( RANDOM % 100 ))
          if [ $RANDOM_NUMBER -eq 0 ]; then
            echo "REVIEW_OUTPUT=ü´§ –ù—É... –ª–∞–¥–Ω–æ. –ù–æ —è –≤—Å—ë —Ä–∞–≤–Ω–æ **–Ω–µ–¥–æ–≤–æ–ª–µ–Ω**." >> $GITHUB_ENV
          else
            # –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ —è–∑–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ (—Ç–µ–ø–µ—Ä—å –µ—â—ë –∑–ª–µ–µ)
            REVIEWS=(
              "üíÄ **–ö–æ–¥-—É–±–∏–π—Ü–∞**. –¢—ã –≤–æ–æ–±—â–µ –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ—Ç –∫–æ–¥ **—Å–ª–æ–º–∞–µ—Ç –ø—Ä–æ–¥–∞–∫—à–Ω**?"
              "ü§Æ **–ú–µ–Ω—è —Ç–æ—à–Ω–∏—Ç**. –ö—Ç–æ —Ç–µ–±—è **–ø—É—Å—Ç–∏–ª –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É**?"
              "üî• **–°–æ–∂–≥–∏ —ç—Ç–æ**. –ù–µ—Ç, —Å–µ—Ä—å—ë–∑–Ω–æ, **–ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ** ‚Äî rm -rf."
              "üëé **–≠—Ç–æ —Ö—É–∂–µ, —á–µ–º PHP –≤ 2007**. –ü–æ–∑–æ—Ä."
              "üí© **–ö–æ–¥-–¥–µ—Ä—å–º–æ**. –î–∞–∂–µ **–ª–∏–Ω—Ç–∏–Ω–≥** —Å–¥–æ—Ö –æ—Ç —Å—Ç—ã–¥–∞."
              "ü¶ç **–û–±–µ–∑—å—è–Ω–∞ —Å IDE** –Ω–∞–ø–∏—Å–∞–ª–∞ –±—ã –ª—É—á—à–µ."
              "üöë **–í—ã–∑–æ–≤–∏—Ç–µ —Å–∫–æ—Ä—É—é**, —É –º–µ–Ω—è **–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –º–æ–∑–≥—É**."
              "ü§° **–ö–ª–æ—É–Ω–∞–¥–∞**. –¢—ã **–Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫**, —Ç—ã **—Ü–∏—Ä–∫–æ–≤–æ–π –∞—Ä—Ç–∏—Å—Ç**."
              "üßü **–ó–æ–º–±–∏-–∫–æ–¥**. –û–Ω–æ **—É–∂–µ –º–µ—Ä—Ç–≤–æ**, –Ω–æ –ø–æ—á–µ–º—É-—Ç–æ –µ—â—ë –¥–≤–∏–∂–µ—Ç—Å—è."
              "üìâ **–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞** ‚Äî **–æ—à–∏–±–∫–∞**. **–†–µ–∫–æ—Ä–¥**!"
              "üí£ **–î–∏–Ω–∞–º–∏—Ç –≤ —Ä—É–∫–∏ –¥–µ—Ç—è–º** ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–µ–µ, —á–µ–º —ç—Ç–æ—Ç –∫–æ–¥."
              "üôà **–ú–æ–∏ –≥–ª–∞–∑–∞ –≥–æ—Ä—è—Ç**. –ì–¥–µ **UNBLEACH**?"
              "üß® **–≠—Ç–æ—Ç –∫–æ–¥ ‚Äî —Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç**. **–ó–∞–±–∞–Ω–∏—Ç—å** –∞–≤—Ç–æ—Ä–∞."
              "‚ò†Ô∏è **–Ø–¥–æ–≤–∏—Ç–æ**. **–ù–µ —Ç—Ä–æ–≥–∞—Ç—å** –±–µ–∑ **–ø—Ä–æ—Ç–∏–≤–æ–≥–∞–∑–∞**."
            )
            RANDOM_REVIEW=${REVIEWS[$(( RANDOM % ${#REVIEWS[@]} ))]}

            # –î–æ–±–∞–≤–ª—è–µ–º "–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –Ω–µ–Ω–∞–≤–∏—Å—Ç—å", –µ—Å–ª–∏ PR –±–æ–ª—å—à–æ–π
            if [[ "${{ steps.pr_analysis.outputs.extra_hate }}" != "" ]]; then
              RANDOM_REVIEW+="\n\n**üí¢ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ô –ì–ù–ï–í üí¢**: ${{ steps.pr_analysis.outputs.extra_hate }}"
            fi

            # –î–æ–±–∞–≤–ª—è–µ–º "–æ—à–∏–±–∫—É" –¥–ª—è –Ω–∞—É–∫–æ–æ–±—Ä–∞–∑–∏—è
            RANDOM_REVIEW+="\n\n**üîß '–ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞'**: ${{ steps.pr_analysis.outputs.random_error }}"

            echo "REVIEW_OUTPUT=$RANDOM_REVIEW" >> $GITHUB_ENV
          fi

      - name: Nuke the PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${{ github.actor }} **–°–õ–ê–í–ê –ì–ù–ï–í–ù–û –†–ï–í–¨–Æ–í–ò–¢ –¢–í–û–ô –ö–û–î:**\n\n${process.env.REVIEW_OUTPUT}\n\n**P.S.** –ù–µ –ø—Ä–∏–Ω–∏–º–∞–π –±–ª–∏–∑–∫–æ –∫ —Å–µ—Ä–¥—Ü—É... (–∏–ª–∏ –ø—Ä–∏–Ω–∏–º–∞–π, –º–Ω–µ –ø–ª–µ–≤–∞—Ç—å)`
            });

            // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é (üí©, üëé, üöÆ)
            const reactions = ['-1', 'confused', 'eyes', 'hooray', 'laugh', 'heart', 'rocket'];
            const toxicReactions = ['-1', 'confused', 'eyes']; // –¢–æ–ª—å–∫–æ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–µ
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: toxicReactions[Math.floor(Math.random() * toxicReactions.length)]
            });
