name: "Slava's DEMOLITION Code Review"

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  nuclear_review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup environment
        id: setup
        run: |
          sudo apt-get install -y jq
          echo "REVIEWS=(\"💀 Код-убийца\" \"🤮 Меня тошнит\" \"🔥 Сожги это\" \"👎 Ужасно\" \"💩 Дерьмовый код\")" >> $GITHUB_ENV

      - name: Get commit data
        id: commit_data
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const { data: commit } = await github.rest.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha
              });

              const files = commit.files || [];
              const totalChanges = files.reduce((sum, file) => sum + (file.changes || 0), 0);
              const author = commit.author?.login || context.actor;

              core.setOutput('total_changes', totalChanges);
              core.setOutput('author', author);
              core.setOutput('commit_sha', context.sha);
            } catch (error) {
              core.setFailed('Failed to get commit data: ' + error.message);
            }

      - name: Generate comment
        id: generate_comment
        run: |
          TOTAL_CHANGES=${{ steps.commit_data.outputs.total_changes || 0 }}
          RANDOM_REVIEW=${REVIEWS[$((RANDOM % ${#REVIEWS[@]}))]}

          if [ $TOTAL_CHANGES -lt 50 ] && [ $((RANDOM % 10)) -eq 0 ]; then
            echo "COMMENT=🫤 Ну... ладно. Но я всё равно недоволен." >> $GITHUB_ENV
          else
            echo "COMMENT=$RANDOM_REVIEW" >> $GITHUB_ENV
          fi
          echo "AUTHOR=${{ steps.commit_data.outputs.author }}" >> $GITHUB_ENV
          echo "COMMIT_SHA=${{ steps.commit_data.outputs.commit_sha }}" >> $GITHUB_ENV

      - name: Post comment
        uses: actions/github-script@v6
        env:
          COMMENT: ${{ env.COMMENT }}
          AUTHOR: ${{ env.AUTHOR }}
          COMMIT_SHA: ${{ env.COMMIT_SHA }}
        with:
          script: |
            try {
              await github.rest.repos.createCommitComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: process.env.COMMIT_SHA,
                body: `@${process.env.AUTHOR} ${process.env.COMMENT}`
              });
            } catch (error) {
              core.notice("Creating issue instead...");
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Code review for ${process.env.COMMIT_SHA}`,
                body: `@${process.env.AUTHOR} ${process.env.COMMENT}`
              });
            }
